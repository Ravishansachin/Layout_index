{
	"info": {
		"_postman_id": "a6648948-34f6-4466-8e5e-69cc82d8ce42",
		"name": "Layout index collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17331313"
	},
	"item": [
		{
			"name": "success login",
			"item": [
				{
					"name": "Login -valid admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonBody = pm.response.json();\r",
									"\r",
									"if(responseCode.code==200){\r",
									"    pm.environment.set(\"token\", jsonBody.token);\r",
									"\r",
									"}\r",
									"\r",
									"else{\r",
									"console.log(\"${pm.info.requestName}: ' Error : pm.response.json().error.message\");\r",
									"postman.setNextRequest(null);\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"status code is ok \",function(){\r",
									"    pm.response.to.have.status('OK');\r",
									"});\r",
									"pm.test(\"Response time is less than 2000\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", function () {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", \"admin\");\r",
									"pm.environment.set(\"password\", \"password123\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"description": "Username of the account",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"description": "Password of the account.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "This endpoint creates a session token which will be used as access_token for all other API requests as authentication."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "royal.pinto@gmail.com",
											"description": "Username of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "ddAqBZmOqnYnhwM6j1Kqtn1OC7dqU4yqPtqZaVAtfO4=",
											"description": "Encypted password of the account. Encyption: Base64(HMAC256(username + password with password as the secret key))",
											"type": "text"
										},
										{
											"key": "remember",
											"value": "true",
											"description": "Optional, if set, the access token generated will be valid for longer period",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true",
									"name": "Access-Control-Allow-Credentials",
									"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "4391",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Aug 2018 09:26:03 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Aswat",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "access-control-allow-headers",
									"value": "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token",
									"name": "access-control-allow-headers",
									"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
								},
								{
									"key": "access-control-allow-methods",
									"value": "GET, POST, PUT, DELETE, OPTIONS",
									"name": "access-control-allow-methods",
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
								},
								{
									"key": "etag",
									"value": "W/\"1127-dAbh9T8iwf2725MUUlEXBB1txG4\"",
									"name": "etag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "x-powered-by",
									"value": "Hardwork, Inspiration, Will and Coffee",
									"name": "x-powered-by",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": true,\n  \"content\": {\n    \"id\": 58,\n    \"firstName\": \"Royal\",\n    \"lastName\": \"Pinto\",\n    \"username\": \"royal.pinto@gmail.com\",\n    \"status\": \"active\",\n    \"type\": \"admin\",\n    \"photo\": \"7241e52ba52ec0c95e4faa83bbde29f7\",\n    \"roleId\": 2,\n    \"lastLoginAt\": \"2018-08-15T09:26:03.504Z\",\n    \"contactNumber\": null,\n    \"plan\": \"regular\",\n    \"createdAt\": \"2018-08-14T04:04:48.391Z\",\n    \"updatedAt\": \"2018-08-15T09:26:03.505Z\",\n    \"role\": {\n      \"id\": 2,\n      \"name\": \"basic\",\n      \"permissions\": {\n        \"live\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"audit\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"roles\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"users\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"agents\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"queues\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"skills\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"apiKeys\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"billing\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"numbers\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"gateways\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"settings\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"uploader\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"dashboard\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"ivreditor\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"positions\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"blacklists\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"recordings\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"statistics\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"callHistory\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"agentReports\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"callTrackers\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        },\n        \"dialplanEditor\": {\n          \"read\": true,\n          \"access\": true,\n          \"create\": false,\n          \"delete\": false,\n          \"update\": false\n        }\n      }\n    },\n    \"roles\": [\n      {\n        \"id\": 2,\n        \"name\": \"basic\",\n        \"permissions\": {\n          \"live\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"audit\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"roles\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"users\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"agents\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"queues\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"skills\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"apiKeys\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"billing\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"numbers\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"gateways\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"settings\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"uploader\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"dashboard\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"ivreditor\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"positions\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"blacklists\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"recordings\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"statistics\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"callHistory\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"agentReports\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"callTrackers\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          },\n          \"dialplanEditor\": {\n            \"read\": true,\n            \"access\": true,\n            \"create\": false,\n            \"delete\": false,\n            \"update\": false\n          }\n        }\n      }\n    ],\n    \"access_token\": \"3ae8e0e0-a06d-11e8-8476-8d2a2f09b159\",\n    \"profileType\": \"users\"\n  },\n  \"info\": {\n    \n  }\n}"
						},
						{
							"name": "Login -valid admin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{username}}",
											"description": "Username of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"description": "Password of the account.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/auth",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "27"
								},
								{
									"key": "Etag",
									"value": "W/\"1b-NQGJFGPFVN04OLIiErCtFk2cYdI\""
								},
								{
									"key": "Date",
									"value": "Fri, 09 Jun 2023 12:39:19 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"67aa178407f0161\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "collection",
			"item": [
				{
					"name": "valid/invalid",
					"item": [
						{
							"name": "valid",
							"item": [
								{
									"name": "Create Books-server error",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"firstname\",pm.variables.replaceIn(\"{{$randomFirstName}}\") )\r",
													"pm.environment.set(\"lastname\",pm.variables.replaceIn(\"{{$randomLastName}}\") )\r",
													"pm.environment.set(\"totalprice\",pm.variables.replaceIn(\"{{$randomInt}}\") )\r",
													"pm.environment.set(\"depositpaid\",pm.variables.replaceIn(\"{{$randomBoolean}}\") )\r",
													"const moment = require('moment');\r",
													"var numberOfDays = _.random(6570, 30000);\r",
													"pm.environment.set(\"checkin\", moment().subtract(numberOfDays, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"checkout\", moment().subtract(numberOfDays, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"additionalneeds\",pm.variables.replaceIn(\"{{$randomDomainWord}}\") )\r",
													"pm.environment.set(\"depositpaid\",pm.variables.replaceIn(\"{{$randomBoolean}}\") )\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\", function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"const jsonBody = pm.response.json();\r",
													"\r",
													"if(responseCode.code==200){\r",
													"pm.environment.set(\"id\",jsonBody.bookingid);\r",
													"}\r",
													"\r",
													"else{\r",
													"console.log(\"${pm.info.requestName}: ' Error : pm.response.json().error.message\");\r",
													"postman.setNextRequest(null);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": \"{{$randomInt}}\",\r\n    \"depositpaid\": \"{{$randomBoolean}}\",\r\n\r\n     \"bookingdates\": [\r\n        {\r\n            \"checkin\": \"{{checkin}}\",\r\n            \"isPrimary\": true\r\n        },\r\n        {\r\n            \"checkout\": \"{{checkout}}\",\r\n            \"isPrimary\": false\r\n        }\r\n         \r\n          ],\r\n\r\n    \"additionalneeds\": \"{{$randomDomainWord}}\"\r\n        \r\n        \r\n}\r\n\r\n\r\n\r\n ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/booking",
											"host": [
												"{{url}}"
											],
											"path": [
												"booking"
											]
										},
										"description": "The endpoint creates a new call center number."
									},
									"response": [
										{
											"name": "Create Books",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "token",
														"value": "{{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": \"{{$randomInt}}\",\r\n    \"depositpaid\": \"{{$randomBoolean}}\",\r\n\r\n     \"bookingdates\": [\r\n        {\r\n            \"checkin\": \"{{checkin}}\",\r\n            \"isPrimary\": true\r\n        },\r\n        {\r\n            \"checkout\": \"{{checkout}}\",\r\n            \"isPrimary\": false\r\n        }\r\n         \r\n          ],\r\n\r\n    \"additionalneeds\": \"{{$randomDomainWord}}\"\r\n        \r\n        \r\n}\r\n\r\n\r\n\r\n ",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/booking",
													"host": [
														"{{url}}"
													],
													"path": [
														"booking"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "21"
												},
												{
													"key": "Etag",
													"value": "W/\"15-/6VXivhc2MKdLfIkLcUE47K6aH0\""
												},
												{
													"key": "Date",
													"value": "Fri, 09 Jun 2023 12:37:39 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"body": "Internal Server Error"
										}
									]
								},
								{
									"name": "Update books",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"agentfullaccesss\",\n    \"permissions\": {\n        \"agents\": {\n          \"access\": true,\n          \"create\": true,\n          \"read\": true,\n          \"update\": true,\n          \"delete\": true\n        }\n    }\n    \n}"
										},
										"url": {
											"raw": "{{url}}/{{id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"{{id}}"
											]
										},
										"description": "This endpoint updates a role by id or name."
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "access_token",
														"value": "{{access_token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"agentfullaccess\",\n    \"permissions\": {\n        \"agents\": {\n          \"access\": true,\n          \"create\": true,\n          \"read\": true,\n          \"update\": true,\n          \"delete\": true\n        }\n    }\n    \n}"
												},
												"url": {
													"raw": "{{url}}/admin/roles/152",
													"host": [
														"{{url}}"
													],
													"path": [
														"admin",
														"roles",
														"152"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "2176",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Sun, 19 Aug 2018 07:13:54 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "Aswat",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "access-control-allow-headers",
													"value": "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token",
													"name": "access-control-allow-headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET, POST, PUT, DELETE, OPTIONS",
													"name": "access-control-allow-methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "etag",
													"value": "W/\"880-J0cgwEYWQLolkxTaFERbb9fMHIw\"",
													"name": "etag",
													"description": "An identifier for a specific version of a resource, often a message digest"
												},
												{
													"key": "x-powered-by",
													"value": "Hardwork, Inspiration, Will and Coffee",
													"name": "x-powered-by",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [],
											"body": "{\"result\":true,\"content\":{\"id\":152,\"name\":\"agentfullaccess\",\"type\":\"dynamic\",\"permissions\":{\"agentReports\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"agents\":{\"access\":true,\"create\":true,\"read\":true,\"update\":true,\"delete\":true},\"apiKeys\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"audit\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"billing\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"blacklists\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"callHistory\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"callTrackers\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"dashboard\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"dialplanEditor\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"gateways\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"ivreditor\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"live\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"numbers\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"positions\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"queues\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"users\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"recordings\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"roles\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"settings\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"skills\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"statistics\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"uploader\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false}},\"createdAt\":\"2018-08-19T07:11:33.136Z\",\"updatedAt\":\"2018-08-19T07:13:54.392Z\",\"deletedAt\":null},\"info\":{}}"
										}
									]
								},
								{
									"name": "Get Books",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											}
										],
										"url": {
											"raw": "{{url}}/booking",
											"host": [
												"{{url}}"
											],
											"path": [
												"booking"
											]
										},
										"description": "This endpoint retrieves the list of roles."
									},
									"response": []
								},
								{
									"name": "Get Books -id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											}
										],
										"url": {
											"raw": "{{url}}/booking/395",
											"host": [
												"{{url}}"
											],
											"path": [
												"booking",
												"395"
											]
										},
										"description": "This endpoint retrieves the list of roles."
									},
									"response": []
								},
								{
									"name": "Delete Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/{{id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"{{id}}"
											]
										},
										"description": "This endpoint deletes a role by id or name."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "access_token",
														"value": "{{access_token}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{url}}/admin/roles/152",
													"host": [
														"{{url}}"
													],
													"path": [
														"admin",
														"roles",
														"152"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "38",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Sun, 19 Aug 2018 07:14:52 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "Aswat",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "access-control-allow-headers",
													"value": "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token",
													"name": "access-control-allow-headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET, POST, PUT, DELETE, OPTIONS",
													"name": "access-control-allow-methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "etag",
													"value": "W/\"26-DC233t2lFNFdy9q+kiirkesXXyg\"",
													"name": "etag",
													"description": "An identifier for a specific version of a resource, often a message digest"
												},
												{
													"key": "x-powered-by",
													"value": "Hardwork, Inspiration, Will and Coffee",
													"name": "x-powered-by",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [],
											"body": "{\"result\":true,\"content\":{},\"info\":{}}"
										}
									]
								}
							]
						},
						{
							"name": "invalid",
							"item": [
								{
									"name": "Create Books-Server error",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.environment.set(\"firstname\",pm.variables.replaceIn(\"{{$randomFirstName}}\") )\r",
													"pm.environment.set(\"lastname\",pm.variables.replaceIn(\"{{$randomLastName}}\") )\r",
													"pm.environment.set(\"totalprice\",pm.variables.replaceIn(\"{{$randomInt}}\") )\r",
													"pm.environment.set(\"depositpaid\",pm.variables.replaceIn(\"{{$randomBoolean}}\") )\r",
													"const moment = require('moment');\r",
													"var numberOfDays = _.random(6570, 30000);\r",
													"pm.environment.set(\"checkin\", moment().subtract(numberOfDays, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"checkout\", moment().subtract(numberOfDays, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"additionalneeds\",pm.variables.replaceIn(\"{{$randomDomainWord}}\") )\r",
													"pm.environment.set(\"depositpaid\",pm.variables.replaceIn(\"{{$randomBoolean}}\") )\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"status code is ok \",function(){\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is application/json\", function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"const jsonBody = pm.response.json();\r",
													"\r",
													"if(responseCode.code==200){\r",
													"pm.environment.set(\"id\",jsonBody.bookingid);\r",
													"}\r",
													"\r",
													"else{\r",
													"console.log(\"${pm.info.requestName}: ' Error : pm.response.json().error.message\");\r",
													"postman.setNextRequest(null);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "token",
												"value": "{{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": \"{{$randomInt}}\",\r\n    \"depositpaid\": \"{{$randomBoolean}}\",\r\n\r\n     \"bookingdates\": [\r\n        {\r\n            \"checkin\": \"{{checkin}}\",\r\n            \"isPrimary\": true\r\n        },\r\n        {\r\n            \"checkout\": \"{{checkout}}\",\r\n            \"isPrimary\": false\r\n        }\r\n         \r\n          ],\r\n\r\n    \"additionalneeds\": \"{{$randomDomainWord}}\"\r\n        \r\n        \r\n}\r\n\r\n\r\n\r\n ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/booking",
											"host": [
												"{{url}}"
											],
											"path": [
												"booking"
											]
										},
										"description": "The endpoint creates a new call center number."
									},
									"response": [
										{
											"name": "Create Books",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "token",
														"value": "{{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}}\",\r\n    \"lastname\": \"{{$randomLastName}}\",\r\n    \"totalprice\": \"{{$randomInt}}\",\r\n    \"depositpaid\": \"{{$randomBoolean}}\",\r\n\r\n     \"bookingdates\": [\r\n        {\r\n            \"checkin\": \"{{checkin}}\",\r\n            \"isPrimary\": true\r\n        },\r\n        {\r\n            \"checkout\": \"{{checkout}}\",\r\n            \"isPrimary\": false\r\n        }\r\n         \r\n          ],\r\n\r\n    \"additionalneeds\": \"{{$randomDomainWord}}\"\r\n        \r\n        \r\n}\r\n\r\n\r\n\r\n ",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/booking",
													"host": [
														"{{url}}"
													],
													"path": [
														"booking"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "text/plain; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "21"
												},
												{
													"key": "Etag",
													"value": "W/\"15-/6VXivhc2MKdLfIkLcUE47K6aH0\""
												},
												{
													"key": "Date",
													"value": "Fri, 09 Jun 2023 12:37:39 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"body": "Internal Server Error"
										}
									]
								},
								{
									"name": "Update Role-Not Found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Not Found \",function(){\r",
													"    pm.response.to.have.status('Not Found');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is 'text/plain; charset=utf-8\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain; charset=utf-8');\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"agentfullaccesss\",\n    \"permissions\": {\n        \"agents\": {\n          \"access\": true,\n          \"create\": true,\n          \"read\": true,\n          \"update\": true,\n          \"delete\": true\n        }\n    }\n    \n}"
										},
										"url": {
											"raw": "{{url}}/400",
											"host": [
												"{{url}}"
											],
											"path": [
												"400"
											]
										},
										"description": "This endpoint updates a role by id or name."
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "access_token",
														"value": "{{access_token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\":\"agentfullaccess\",\n    \"permissions\": {\n        \"agents\": {\n          \"access\": true,\n          \"create\": true,\n          \"read\": true,\n          \"update\": true,\n          \"delete\": true\n        }\n    }\n    \n}"
												},
												"url": {
													"raw": "{{url}}/admin/roles/152",
													"host": [
														"{{url}}"
													],
													"path": [
														"admin",
														"roles",
														"152"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "2176",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Sun, 19 Aug 2018 07:13:54 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "Aswat",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "access-control-allow-headers",
													"value": "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token",
													"name": "access-control-allow-headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET, POST, PUT, DELETE, OPTIONS",
													"name": "access-control-allow-methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "etag",
													"value": "W/\"880-J0cgwEYWQLolkxTaFERbb9fMHIw\"",
													"name": "etag",
													"description": "An identifier for a specific version of a resource, often a message digest"
												},
												{
													"key": "x-powered-by",
													"value": "Hardwork, Inspiration, Will and Coffee",
													"name": "x-powered-by",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [],
											"body": "{\"result\":true,\"content\":{\"id\":152,\"name\":\"agentfullaccess\",\"type\":\"dynamic\",\"permissions\":{\"agentReports\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"agents\":{\"access\":true,\"create\":true,\"read\":true,\"update\":true,\"delete\":true},\"apiKeys\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"audit\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"billing\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"blacklists\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"callHistory\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"callTrackers\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"dashboard\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"dialplanEditor\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"gateways\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"ivreditor\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"live\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"numbers\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"positions\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"queues\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"users\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"recordings\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"roles\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"settings\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"skills\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"statistics\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false},\"uploader\":{\"access\":false,\"create\":false,\"read\":false,\"update\":false,\"delete\":false}},\"createdAt\":\"2018-08-19T07:11:33.136Z\",\"updatedAt\":\"2018-08-19T07:13:54.392Z\",\"deletedAt\":null},\"info\":{}}"
										}
									]
								},
								{
									"name": "Get Books-Not Found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Not Found \",function(){\r",
													"    pm.response.to.have.status('Not Found');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is 'text/plain; charset=utf-8\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain; charset=utf-8');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											}
										],
										"url": {
											"raw": "{{url}}/booking/0",
											"host": [
												"{{url}}"
											],
											"path": [
												"booking",
												"0"
											]
										},
										"description": "This endpoint retrieves the list of roles."
									},
									"response": []
								},
								{
									"name": "Delete Role-Not Found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Not Found \",function(){\r",
													"    pm.response.to.have.status('Not Found');\r",
													"});\r",
													"pm.test(\"Response time is less than 2000\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
													"});\r",
													"\r",
													"pm.test(\"Content-Type header is 'text/plain; charset=utf-8\",  function () {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('text/plain; charset=utf-8');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "access_token",
												"value": "{{access_token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/200",
											"host": [
												"{{url}}"
											],
											"path": [
												"200"
											]
										},
										"description": "This endpoint deletes a role by id or name."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "access_token",
														"value": "{{access_token}}"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{url}}/admin/roles/152",
													"host": [
														"{{url}}"
													],
													"path": [
														"admin",
														"roles",
														"152"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true",
													"name": "Access-Control-Allow-Credentials",
													"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
												},
												{
													"key": "Connection",
													"value": "keep-alive",
													"name": "Connection",
													"description": "Options that are desired for the connection"
												},
												{
													"key": "Content-Length",
													"value": "38",
													"name": "Content-Length",
													"description": "The length of the response body in octets (8-bit bytes)"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8",
													"name": "Content-Type",
													"description": "The mime type of this content"
												},
												{
													"key": "Date",
													"value": "Sun, 19 Aug 2018 07:14:52 GMT",
													"name": "Date",
													"description": "The date and time that the message was sent"
												},
												{
													"key": "Server",
													"value": "Aswat",
													"name": "Server",
													"description": "A name for the server"
												},
												{
													"key": "access-control-allow-headers",
													"value": "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access_token",
													"name": "access-control-allow-headers",
													"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
												},
												{
													"key": "access-control-allow-methods",
													"value": "GET, POST, PUT, DELETE, OPTIONS",
													"name": "access-control-allow-methods",
													"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
												},
												{
													"key": "etag",
													"value": "W/\"26-DC233t2lFNFdy9q+kiirkesXXyg\"",
													"name": "etag",
													"description": "An identifier for a specific version of a resource, often a message digest"
												},
												{
													"key": "x-powered-by",
													"value": "Hardwork, Inspiration, Will and Coffee",
													"name": "x-powered-by",
													"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
												}
											],
											"cookie": [],
											"body": "{\"result\":true,\"content\":{},\"info\":{}}"
										}
									]
								}
							]
						}
					],
					"description": "The roles module handles all the permissions for user accounts. Role can be a system defined static role or user can create roles with various permission sets. User will be allowed to access/manage a module only if he/she has been assigned with a role which has nesessary permissions for the same module.\n\nThere are 2 types of permissions available. One is for statis modules. One is for the resources within the modules.\nFor example one role can have access to the full module live, queues, agents.\nA role can also have access to specific resources within a module. Foe example a specific agent group within the agent groups module. For now, this is retricted to queue and agent groups only. But in future we may remove this restriction.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		}
	]
}